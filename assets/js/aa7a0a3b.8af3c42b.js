"use strict";(self.webpackChunksymfony_mongodb_atlas_workshop=self.webpackChunksymfony_mongodb_atlas_workshop||[]).push([[400],{7339:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var t=o(4848),s=o(8453);const r={},i="\ud83d\udcda My Bookings page",a={id:"structure-site/backend-4",title:"\ud83d\udcda My Bookings page",description:"This page lists the already made bookings of the user.",source:"@site/docs/40-structure-site/6-backend-4.mdx",sourceDirName:"40-structure-site",slug:"/structure-site/backend-4",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/backend-4",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/symfony-mongodb-rental-workshop/blob/main/docs/40-structure-site/6-backend-4.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcc4 Booking and confirmation of a rental",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/backend-3"},next:{title:"\ud83c\udf0e Full code",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/fullcode"}},l={},d=[{value:"Route",id:"route",level:2},{value:"Controller",id:"controller",level:2},{value:"By the end of this step, you should have a working Bookings page that lists all the bookings made by the user.",id:"by-the-end-of-this-step-you-should-have-a-working-bookings-page-that-lists-all-the-bookings-made-by-the-user",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"-my-bookings-page",children:"\ud83d\udcda My Bookings page"}),"\n",(0,t.jsx)(n.p,{children:"This page lists the already made bookings of the user."}),"\n",(0,t.jsx)(n.h2,{id:"route",children:"Route"}),"\n",(0,t.jsxs)(n.p,{children:["Lets review the routes under ",(0,t.jsx)(n.code,{children:"config/routes.yaml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# list all bookings\nbooking_index:\n    path: /booking\n    controller: App\\Controller\\BookingController::index\n    methods: [GET]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"controller",children:"Controller"}),"\n",(0,t.jsxs)(n.p,{children:["We will create a new controller ",(0,t.jsx)(n.code,{children:"BookingController"})," and add the ",(0,t.jsx)(n.code,{children:"index"})," method to list all the bookings in ",(0,t.jsx)(n.code,{children:"Controller/BookingController.php"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n/**\n * BookingController\n * ---------------------\n * This class is responsible for handling the booking query operations.\n * \n * @category Controller\n * @package  App\\Controller\n * @author   pavel.duchovny\n * @license  apache-2.0\n */\n\ndeclare(strict_types=1);\n\nnamespace App\\Controller;\n\nuse App\\Document\\Booking;\nuse Doctrine\\ODM\\MongoDB\\DocumentManager;\nuse Psr\\Log\\LoggerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n\n/*\n    * BookingController\n    ---------------------\n    * This class is responsible for handling the booking query operations.\n*/\nclass BookingController extends AbstractController\n{\n    // DocumentManager instance\n    private $_documentManager;\n    private $_logger;\n    /**\n     * __construct -\n     * \n     * This function is responsible for initializing the BookingController class.\n     * \n     * @param DocumentManager $_documentManager - The document manager\n     * @param LoggerInterface $_logger          - The _logger interface\n     */\n    public function __construct(DocumentManager $_documentManager, LoggerInterface $_logger)\n    {\n        $this->_documentManager = $_documentManager;\n        $this->_logger          = $_logger;\n    }\n\n    \n    /**\n     * index -\n     * \n     * This function is responsible for rendering the bookings page.\n     * \n     * @param Request $request - The request object\n     * \n     * @return Response\n     */\n    #[Route('/booking', name: 'booking_index', methods: ['GET'])]\n    public function index(Request $request): Response\n    {\n        // Fetch all the bookings\n        $bookings = $this->_documentManager->getRepository(Booking::class)->findAll();\n\n        // Render the bookings page\n        return $this->render('rental/bookings.html.twig', ['bookings' => $bookings]);\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"index"})," method fetches all the bookings from the database and renders the ",(0,t.jsx)(n.code,{children:"bookings.html.twig"})," template. The attribute tag ",(0,t.jsx)(n.code,{children:"#[Route('/booking', name: 'booking_index', methods: ['GET'])]"})," is used to define the route for the ",(0,t.jsx)(n.code,{children:"index"})," method."]}),"\n",(0,t.jsxs)(n.p,{children:["The twig template ",(0,t.jsx)(n.code,{children:"bookings.html.twig"})," will be created in the next step."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:"{# templates/rental/bookings.html.twig #}\n\n{% extends 'base.html.twig' %}\n\n{% block title %}My Bookings{% endblock %}\n\n{% block body %}\n    <div class=\"container\">\n        <h2>My Bookings</h2>\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th>Rental</th>\n                    <th>Confirmation</th>\n                    <th>Start Date</th>\n                    <th>End Date</th>\n                    <th>Total Cost</th>\n                </tr>\n            </thead>\n            <tbody>\n                {% for booking in bookings %}\n                    <tr>\n                        <td><a href=\"{{ path('rental_details', {'id': booking.rental.id}) }}\">\n                            {{booking.rentalName }}</a></td>\n                        <td>{{booking.id}}</td>\n                        <td>{{ booking.startDate|date('Y-m-d') }}</td>\n                        <td>{{ booking.endDate|date('Y-m-d') }}</td>\n                        <td>{{ booking.totalCost }}$</td>\n                    </tr>\n                {% endfor %}\n            </tbody>\n        </table>\n    </div>\n{% endblock %}               \n"})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.code,{children:"booking"})," object in the ",(0,t.jsx)(n.code,{children:"for"})," loop. It contains the rental name, confirmation ID, check-in and check-out dates. The ",(0,t.jsx)(n.code,{children:"booking.rentalId"})," is used to create a link to the rental details page. The ",(0,t.jsx)(n.code,{children:"booking.startDate"})," and ",(0,t.jsx)(n.code,{children:"booking.endDate"})," are formatted using the ",(0,t.jsx)(n.code,{children:"date"})," filter."]}),"\n",(0,t.jsx)(n.h2,{id:"by-the-end-of-this-step-you-should-have-a-working-bookings-page-that-lists-all-the-bookings-made-by-the-user",children:"By the end of this step, you should have a working Bookings page that lists all the bookings made by the user."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Click on the ",(0,t.jsx)(n.code,{children:"My Bookings"})," link in the navigation bar to view the bookings page."]}),"\n",(0,t.jsx)(n.li,{children:"The bookings page should list all the bookings made by the user."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);