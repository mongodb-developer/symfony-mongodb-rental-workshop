"use strict";(self.webpackChunksymfony_mongodb_atlas_workshop=self.webpackChunksymfony_mongodb_atlas_workshop||[]).push([[225],{7795:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=t(4848),a=t(8453);const l={},o="\ud83d\udce6 Backend rentals_index endpoint",i={id:"structure-site/backend-1",title:"\ud83d\udce6 Backend rentals_index endpoint",description:"Rental controller",source:"@site/docs/40-structure-site/3-backend-1.mdx",sourceDirName:"40-structure-site",slug:"/structure-site/backend-1",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/backend-1",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/symfony-mongodb-rental-workshop/blob/main/docs/40-structure-site/3-backend-1.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfc3\u200d\u2642\ufe0f Application development setup",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/initial-setup"},next:{title:"\ud83d\udd17 Backend routes details and  /rental/create",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/beckend-2"}},s={},c=[{value:"Rental controller",id:"rental-controller",level:2},{value:"Adjust routing",id:"adjust-routing",level:2},{value:"Create the rental index html twig",id:"create-the-rental-index-html-twig",level:2},{value:"Start the server",id:"start-the-server",level:2},{value:"When we finish this page we will have the following functionalities:",id:"when-we-finish-this-page-we-will-have-the-following-functionalities",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"-backend-rentals_index-endpoint",children:"\ud83d\udce6 Backend rentals_index endpoint"}),"\n",(0,r.jsx)(n.h2,{id:"rental-controller",children:"Rental controller"}),"\n",(0,r.jsxs)(n.p,{children:["We will start by building the ",(0,r.jsx)(n.code,{children:"RentalController.php"}),". This controller will be first responsible for handling the ",(0,r.jsx)(n.code,{children:"rentals_index"})," endpoint."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n\n/**\n * RentalController\n * ---------------------\n * \n * This class is responsible for handling the rental query and booking operations.\n * \n * @category Controller\n * @package  App\\Controller\n * @author   pavel.duchovny\n * @license  apache-2.0\n */\n\ndeclare(strict_types=1);\n\nnamespace App\\Controller;\n\nuse App\\Document\\Booking;\nuse App\\Document\\Rental;\nuse App\\Form\\RentalType;\nuse DateTime;\nuse DateTimeImmutable;\nuse Doctrine\\ODM\\MongoDB\\DocumentManager;\nuse MongoDB\\BSON\\Regex;\nuse Psr\\Log\\LoggerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\n/**\n * RentalController\n * ---------------------\n * This class is responsible for handling the rental query and booking operations.\n */\n\nclass RentalController extends AbstractController\n{\n    // DocumentManager instance\n    private $_documentManager;\n    private $_logger;\n    /**\n     * __construct -\n     * \n     * This function is responsible for initializing the RentalController class.\n     * \n     * @param DocumentManager $_documentManager - The document manager\n     * @param LoggerInterface $_logger          - The logger interface\n     * \n     * @return void\n     */\n    public function __construct(DocumentManager $_documentManager, LoggerInterface $_logger)\n    {\n        $this->_documentManager = $_documentManager;\n        $this->_logger          = $_logger;\n    }\n\n    // Index action to display all the rentals or filter by city and availability\n\n    #[Route('/', name: 'rental_index', methods: ['GET'])]\n    public function index(Request $request): Response\n    {\n        // Get the city, check-in and check-out dates from the query parameters\n        $city     = $request->query->get('city');\n        $checkInInput = $request->query->get('check_in');\n        $checkOutInput = $request->query->get('check_out');\n\n        $checkIn = $checkInInput ? new DateTime($checkInInput) : null;\n        $checkOut = $checkOutInput ? new DateTime($checkOutInput) : null;\n        // Fetch all the rentals\n        if ($city && $checkIn && $checkOut) {\n            // Fetch rentals based on city and availability\n            // The availability field is an array of objects with start_date and end_date fields\n            // So we use elemMatch to query the availability array and see if the user requested dates are available\n            $rentalRepository = $this->_documentManager->getRepository(Rental::class);\n            $queryBuilder = $rentalRepository->createQueryBuilder();\n\n            $rentals = $queryBuilder\n                ->field('location')->equals(new Regex($city, 'i'))\n                ->field('availability')->elemMatch(\n                    $queryBuilder->expr()\n                        ->field('startDate')->lte($checkIn)\n                        ->field('endDate')->gte($checkOut),\n                )\n                ->getQuery()\n                ->execute();\n        } else {\n            // Fetch all the rentals\n            $rentals = $this->_documentManager->getRepository(Rental::class)->findAll();\n        }\n\n        // Render the rentals page\n        \n        return $this->render('rental/index.html.twig', ['rentals' => $rentals]);\n    }\n\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In the ",(0,r.jsx)(n.code,{children:"RentalController.php"})," we have defined the ",(0,r.jsx)(n.code,{children:"index"})," method which is responsible for fetching all the rentals or filtering them based on the city and availability. We are using the ",(0,r.jsx)(n.code,{children:"QueryBuilder"})," to build the query and fetch the rentals based on the city and availability. We are also using the ",(0,r.jsx)(n.code,{children:"elemMatch"})," to query the availability array and see if the user requested dates are available."]}),"\n",(0,r.jsx)(n.p,{children:"Now we can adjust the needed routes in the `config/routes.yaml file. We will also define future routes for the page to load"}),"\n",(0,r.jsx)(n.h2,{id:"adjust-routing",children:"Adjust routing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# main routes\n# create a new rental\nrental_create:\n    path: /rental/create\n    controller: App\\Controller\\RentalController::create\n    methods: [GET, POST]\n\n# show a rental\nrental_details:\n    path: /rental/{id}\n    controller: App\\Controller\\RentalController::details\n    methods: [GET]\n\n# book a rental\nrental_book:\n    path: /rental/book/{rentalId}\n    controller: App\\Controller\\RentalController::book\n    methods: [POST]\n\n# list all bookings\nbooking_index:\n    path: /booking\n    controller: App\\Controller\\BookingController::index\n    methods: [GET]\n"})}),"\n",(0,r.jsx)(n.p,{children:"The routes in our application are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rental_create [GET , POST]"})," - to create a new rental"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rental_details [ GET ]"}),"  - to show a rental"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"rental_book [POST]"})," - to book a rental"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"booking_index [GET]"})," - to list all bookings"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"create-the-rental-index-html-twig",children:"Create the rental index html twig"}),"\n",(0,r.jsxs)(n.p,{children:["Now we can create the ",(0,r.jsx)(n.code,{children:"rental/index.html.twig"})," file to render the rentals page."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'{# templates/rental/index.html.twig #}\n{% set currentCity = app.request.query.get(\'city\') %}\n{% set currentCheckIn = app.request.query.get(\'check_in\') %}\n{% set currentCheckOut = app.request.query.get(\'check_out\') %}\n\n{% extends \'base.html.twig\' %}\n\n{% block title %}Rental List{% endblock %}\n\n{% block body %}\n    <div class="container">\n           <h2>Search Rentals</h2>\n        <form action="{{ path(\'rental_index\') }}" method="get">\n            <div class="form-group">\n                <label for="city">Location:</label>\n                <input type="text" id="city" name="city" class="form-control" value="{{ app.request.query.get(\'city\') }}" required>\n            </div>\n            <div class="form-group">\n                <label for="check_in">Check-in Date:</label>\n                <input type="date" id="check_in" name="check_in" class="form-control" value="{{ app.request.query.get(\'check_in\') }}" required>\n            </div>\n            <div class="form-group">\n                <label for="check_out">Check-out Date:</label>\n                <input type="date" id="check_out" name="check_out" class="form-control" value="{{ app.request.query.get(\'check_out\') }}" required>\n            </div>\n            <button type="submit" class="btn btn-primary">Search</button>\n        </form>\n\n        \n       \n        <a href="{{ path(\'rental_create\') }}" class="btn btn-success my-3">Create New Rental</a>\n        <div class="row">\n            {% for rental in rentals %}\n                <div class="col-md-4 mb-4">\n                    <div class="card">\n                        <div class="card-body">\n                            <h4>\n                                <a href="{{ path(\'rental_details\', {\n                                    \'id\': rental.id,\n                                    \'city\': currentCity,\n                                    \'check_in\': currentCheckIn,\n                                    \'check_out\': currentCheckOut\n                                }) }}">{{ rental.name }}</a></h4>\n                            <p class="card-text"><b>Location:</b> {{ rental.location }}</p>\n                            <p class="card-text"><b>Per night:</b> {{ rental.nightCost }}$</p>\n                            \n                            \x3c!-- Add more rental details here --\x3e\n                        </div>\n                    </div>\n                </div>\n            {% endfor %}\n        </div>\n    </div>\n{% endblock %}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"start-the-server",children:"Start the server"}),"\n",(0,r.jsx)(n.p,{children:"Now we can load the initial page of our application:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"symfony server:start\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Once application loaded we can navigate to the ",(0,r.jsx)(n.code,{children:"http://localhost:8000"})," to see the rentals page. We can also filter the rentals based on the city and availability.\n",(0,r.jsx)(n.img,{alt:"lake rental",src:t(2152).A+"",width:"1704",height:"909"})]}),"\n",(0,r.jsx)(n.h2,{id:"when-we-finish-this-page-we-will-have-the-following-functionalities",children:"When we finish this page we will have the following functionalities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fetch all the rentals"}),"\n",(0,r.jsx)(n.li,{children:"Filter rentals based on city and availability"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Now we will move to the next page to create a new rental and list details of a rental."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2152:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/lake-rental-search-48bd9e269afc9867d0fc4ef82b816c08.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const a={},l=r.createContext(a);function o(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);