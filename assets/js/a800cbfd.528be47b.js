"use strict";(self.webpackChunksymfony_mongodb_atlas_workshop=self.webpackChunksymfony_mongodb_atlas_workshop||[]).push([[309],{3099:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(4848),a=t(8453);const s={},o="\ud83d\udd17 Backend routes details and  /rental/create",l={id:"structure-site/beckend-2",title:"\ud83d\udd17 Backend routes details and  /rental/create",description:"Linking to other pages",source:"@site/docs/40-structure-site/4-beckend-2.mdx",sourceDirName:"40-structure-site",slug:"/structure-site/beckend-2",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/beckend-2",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/symfony-mongodb-rental-workshop/blob/main/docs/40-structure-site/4-beckend-2.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udce6 Backend rentals_index endpoint",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/backend-1"},next:{title:"\ud83d\udcc4 Booking and confirmation of a rental",permalink:"/symfony-mongodb-rental-workshop/docs/structure-site/backend-3"}},i={},c=[{value:"Linking to other pages",id:"linking-to-other-pages",level:2},{value:"Details page",id:"details-page",level:3},{value:"Create page",id:"create-page",level:3},{value:"By now you should be able to create a new rental and view the details of a rental.",id:"by-now-you-should-be-able-to-create-a-new-rental-and-view-the-details-of-a-rental",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"-backend-routes-details-and--rentalcreate",children:["\ud83d\udd17 Backend routes ",(0,r.jsx)(n.code,{children:"details"})," and  ",(0,r.jsx)(n.code,{children:"/rental/create"})]}),"\n",(0,r.jsx)(n.h2,{id:"linking-to-other-pages",children:"Linking to other pages"}),"\n",(0,r.jsx)(n.p,{children:"When linking to other pages, you should always use relative links. This ensures that the link will work in any environment, regardless of the domain."}),"\n",(0,r.jsx)(n.h3,{id:"details-page",children:"Details page"}),"\n",(0,r.jsxs)(n.p,{children:["This page is a child of the ",(0,r.jsx)(n.code,{children:"rentals"})," page, so the link should look like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/rental/<rental_id>\n"})}),"\n",(0,r.jsx)(n.p,{children:"First let look at the route in config/routes.yaml:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"rental_details:\n    path: /rental/{id}\n    controller: App\\Controller\\RentalController::details\n    methods: [GET]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"rental_id"})," is a dynamic value that will be replaced with the actual ID of the rental. This is how you link to the details page from another page:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:" <a href=\"{{ path('rental_details', {\n                                    'id': rental.id,\n                                    'city': currentCity,\n                                    'check_in': currentCheckIn,\n                                    'check_out': currentCheckOut\n                                }) }}\">{{ rental.name }}</a>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now lets add the backend logic in the controller:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"\n /**\n     * Details action to display the details of a rental\n     * \n     * @param Request $request - The request object\n     * @param string  $id      - The rental id\n     * \n     * @return Response - The response object\n     */\n    #[Route('/rental/{id}', name: 'rental_details', methods: ['GET'])]\n    public function details(Request $request, string $id): Response\n    {\n        $checkInInput = $request->query->get('check_in');\n        $checkOutInput = $request->query->get('check_out');\n\n        $checkIn = $checkInInput ? new DateTime($checkInInput) : null;\n        $checkOut = $checkOutInput ? new DateTime($checkOutInput) : null;\n        $rental   = $this->_documentManager->getRepository(rental::class)->find($id);\n\n        // Calculate total price based on night cost and number of days\n        if ($checkIn && $checkOut) {\n            $interval   = $checkIn->diff($checkOut);\n            $days       = $interval->days;\n            $totalPrice =  $days * $rental->nightCost;\n        } else {\n            $totalPrice= 0;\n        }\n    \n\n\n        if (! $rental) {\n            throw $this->createNotFoundException('No rental found for id ' . $id);\n        }\n\n        // Render the rental details page\n        return $this->render(\n            'rental/details.html.twig', [\n            'rental' => $rental,\n            'totalPrice' => $totalPrice,\n            ]\n        );\n    }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As you can see, the ",(0,r.jsx)(n.code,{children:"rental_id"})," is passed as a parameter to the ",(0,r.jsx)(n.code,{children:"path"})," function. This will generate the correct URL for the details page."]}),"\n",(0,r.jsxs)(n.p,{children:["Lets see the twig page ",(0,r.jsx)(n.code,{children:"rental/details.html.twig"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'{# templates/rental/details.html.twig #}\n\n\n\n{% extends \'base.html.twig\' %}\n\n{% block title %}Rental Details{% endblock %}\n\n{% block body %}\n    <div class="container mt-4">\n        <h2 class="mb-3"><i class="fas fa-rental"></i> {{ rental.name }}</h2>\n        <p><i class="fas fa-map-marker-alt"></i>  {{ rental.location }}</p>\n        <p><i class="fas fa-tag"></i> <strong> Night Rate:</strong> {{ rental.nightCost }}$</p>\n         <p><i class="fas fa-tag"></i> <strong> Total Rate:</strong> {{ (totalPrice is not same as 0 )? totalPrice ~ \'$\' : \'N/A\' }}</p>\n        \x3c!-- Add more rental details here --\x3e\n\n        <h3 class="mt-4">Book a Room</h3>\n        <form class="mt-3" action="{{ path(\'rental_book\', {\'rentalId\': rental.id}) }}" method="post">\n            <div class="form-group">\n                <label for="start_date">Check In</label>\n                <input id="start_date" type="date" name="startDate" class="form-control" value="{{ app.request.query.get(\'check_in\')  }}">\n            </div>\n            <div class="form-group">\n                <label for="end_date">Check Out</label>\n                <input id="end_date" type="date" name="endDate" class="form-control" value="{{app.request.query.get(\'check_out\') }}">\n            </div>\n            <button type="submit" class="btn btn-success">Book</button>\n        </form>\n    </div>\n{% endblock %}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This page displays the rental details and allows the user to book a room. The booking form is submitted to the ",(0,r.jsx)(n.code,{children:"rental_book"})," route, which we will create next."]}),"\n",(0,r.jsx)(n.h3,{id:"create-page",children:"Create page"}),"\n",(0,r.jsxs)(n.p,{children:["This page is a child of the ",(0,r.jsx)(n.code,{children:"rentals"})," page, so the link should look like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/rentals/create\n"})}),"\n",(0,r.jsx)(n.p,{children:"First let look at the route in config/routes.yaml:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"rental_create:\n    path: /rental/create\n    controller: App\\Controller\\RentalController::create\n    methods: [GET, POST]\n"})}),"\n",(0,r.jsx)(n.p,{children:"This is an admin functionality, but for simplicity, we will not add any security checks in this example. In a real-world application, you should always add proper security checks to protect sensitive functionality."}),"\n",(0,r.jsx)(n.p,{children:"Lets add the backend logic in the controller:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:" /**\n     * Create action to create a new rental\n     * \n     * @param Request $request - The request object\n     * \n     * @return Response - The response object\n     */\n    #[Route('/rental/create', name: 'rental_create', methods: ['GET', 'POST'])]\n    public function create(Request $request): Response\n    {\n        // Create a new rental instance\n        $rental = new rental();\n        // print request\n        $this->_logger->info('Request: ' . $request->getContent());\n\n        // Create a form to create a new rental\n        $form = $this->createForm(RentalType::class, $rental);\n        $form->handleRequest($request);\n\n        // If the form is submitted and valid, persist the rental and redirect to the rentals page\n        if ($form->isSubmitted() && $form->isValid()) {\n            $this->_documentManager->persist($rental);\n            $this->_documentManager->flush();\n\n            return $this->redirectToRoute('rental_index');\n        }\n\n        // Render the create rental page\n        return $this->render(\n            'rental/create.html.twig', [\n            'form' => $form->createView(),\n            ]\n        );\n    }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As you can see, the ",(0,r.jsx)(n.code,{children:"rental_create"})," route accepts both ",(0,r.jsx)(n.code,{children:"GET"})," and ",(0,r.jsx)(n.code,{children:"POST"})," requests. This is because the page contains a form to create a new rental. When the form is submitted, the data is sent to the same URL using a ",(0,r.jsx)(n.code,{children:"POST"})," request."]}),"\n",(0,r.jsxs)(n.p,{children:["We need to build a form type file for the rental entity. Lets create a new file ",(0,r.jsx)(n.code,{children:"src/Form/RentalType.php"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\n/** \n * RentalType - This class is responsible for creating the form for the rental entity.]\n **/\ndeclare(strict_types=1);\n\nnamespace App\\Form;\n\nuse App\\Document\\Rental;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\NumberType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\n/**\n * RentalType\n    ---------------------\n * This class is responsible for creating the form for the rental entity.\n **/\nclass RentalType extends AbstractType\n{\n    /** \n     *  buildForm -  This function is responsible for building the form for the rental entity.\n     * \n     * @param FormBuilderInterface $builder - The form builder interface\n     * @param array                $options - The options for the form\n     */\n    public function buildForm(FormBuilderInterface $builder, array $options): void\n    {\n        $builder\n            ->add('name', TextType::class)\n            ->add('location', TextType::class)\n            ->add('nightCost', NumberType::class);\n            // Add other fields as needed\n    }\n\n    /** \n     *  configureOptions - This function is responsible for setting the default options for the form.\n     * \n     * @param OptionsResolver $resolver - The options resolver\n     * */\n    public function configureOptions(OptionsResolver $resolver): void\n    {\n        $resolver->setDefaults(\n            [\n            'data_class' => Rental::class,\n            ]\n        );\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Lets see the twig page ",(0,r.jsx)(n.code,{children:"rental/create.html.twig"})," :"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'{# templates/rental/create.html.twig #}\n\n{% extends \'base.html.twig\' %}\n\n{% block title %}Create Rental{% endblock %}\n\n{% block body %}\n    <div class="container">\n        <h2>Create Rental</h2>\n        {{ form_start(form, {\'attr\': {\'class\': \'form-horizontal\'}}) }}\n        \n        <div class="form-group">\n            {{ form_label(form.name) }}\n            {{ form_widget(form.name, {\'attr\': {\'class\': \'form-control\'}}) }}\n            {{ form_errors(form.name) }}\n        </div>\n\n        <div class="form-group">\n            {{ form_label(form.location) }}\n            {{ form_widget(form.location, {\'attr\': {\'class\': \'form-control\'}}) }}\n            {{ form_errors(form.location) }}\n        </div>\n\n         <div class="form-group">\n            {{ form_label(form.nightCost) }}\n            {{ form_widget(form.nightCost, {\'attr\': {\'class\': \'form-control\'}}) }}\n            {{ form_errors(form.nightCost) }}\n        </div>\n        <div class="form-group">\n            <label for="start_date">Availability Start Date:</label>\n            <input type="date" id="start_date" name="start_date" class="form-control" value="2024-01-01" required>\n        </div>\n        <div class="form-group">\n            <label for="end_date">Availability End Date:</label>\n            <input type="date" id="end_date" name="end_date" class="form-control" value="2026-01-01" required>\n        </div>\n\n\n        <button type="submit" class="btn btn-success">Create</button>\n        {{ form_end(form) }}\n    </div>\n{% endblock %}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This page displays a form to create a new rental. The form is submitted to the same URL using a ",(0,r.jsx)(n.code,{children:"POST"})," request. If the form is submitted and valid, the rental is persisted and the user is redirected to the rentals page."]}),"\n",(0,r.jsx)(n.h2,{id:"by-now-you-should-be-able-to-create-a-new-rental-and-view-the-details-of-a-rental",children:"By now you should be able to create a new rental and view the details of a rental."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lets test clicking on the rental name and see the details of the rental."}),"\n",(0,r.jsx)(n.li,{children:"Lets test creating a new rental and see if it is added to the list of rentals."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Next we will add the functionality to book a room in a rental and view a booking confirmation."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var r=t(6540);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);